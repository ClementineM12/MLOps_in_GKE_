{{- define "app.kubeflow-utils.yaml" -}}

{{- $project := .glob.project }}
{{- $argoCDNamespace := .glob.namespace }}
{{- $argoCDReleaseName := .glob.release }}

{{- $targetRevision := .kubeflow.targetRevision }}
{{- $repoURL := .kubeflow.repoURL }}
{{- $namespace := "kubeflow" }}

apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ kebabcase .component }}
  namespace: {{ $argoCDNamespace }}
{{- with .config }}
  annotations:
    {{- if not .wave }}
        {{- fail (printf "Error: Sync wave must be defined.") }}
    {{- else }}
    argocd.argoproj.io/sync-wave: "{{ .wave }}"
    {{- end }}
    app.kubernetes.io/part-of: {{ $argoCDReleaseName }}
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: {{ $project }}
  syncPolicy:
    syncOptions:
      - ApplyOutOfSyncOnly=true
      - ServerSideApply=true
      {{- if dig "namespace" "create" "" . }}
      - CreateNamespace=true
      {{- end }}
    automated: 
      selfHeal: true
    managedNamespaceMetadata:
      labels:
        {{- dig "namespace" "labels" dict . | toYaml | nindent 8 }}
      annotations:
        {{- dig "namespace" "annotations" dict . | toYaml | nindent 8 }}
  sources:
    {{- with .source }}
    - repoURL: {{ dig "repoURL" $repoURL . }}
      targetRevision: {{ dig "targetRevision" $targetRevision . }}
      kustomize: 
        {{- dig "kustomize" dict . | toYaml | nindent 10 }}
      {{- if .path }}
      path: {{ .path }}
      {{- end }}
      {{ if .chart }}
      chart: {{ .chart }}
      helm:
        releaseName: {{ .helm.releaseName }}
        ignoreMissingValueFiles: {{ dig "helm" "ignoreMissingValueFiles" "true" . }}
        valueFiles: {{ dig "helm" "valueFiles" list . | toYaml | nindent 10 }}
        valuesObject: {{- dig "helm" "values" dict . | toYaml | nindent 10 }}
        parameters: {{ dig "helm" "parameters" list . | toYaml | nindent 10 }}
      {{- end }}
    {{- end }}
  destination:
    namespace: {{ $namespace }}
    server: https://kubernetes.default.svc
{{- end }}
{{- end }}

{{- $glob := .Values.global -}}
{{- $kubeflow := .Values.kubeflow.global -}}
{{- $input := dict -}}

{{- range $component, $config := .Values.kubeflow.utils -}}
{{- if $config.enabled }}
    {{- $input = dict "component" $component "config" $config "glob" $glob "kubeflow" $kubeflow -}}
    {{- include "app.kubeflow-utils.yaml" $input | fromYaml | toYaml }}
{{- end }}
---
{{ end -}}