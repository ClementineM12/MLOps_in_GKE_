name: Build Kubeflow Helm Chart

on:
  workflow_dispatch:
    inputs:
      chart:
        required: true 
        type: choice
        default: test-02
        options:
          - test-01
          - test-02


env: 
    REGION: ${{ vars.REGION }}
    SERVICE_ACCOUNT: github-svc@mlops-development-project.iam.gserviceaccount.com
    ACCESS_TOKEN_LIFETIME: 200s
    CHART_PATH_01: helm/kubeflow-01
    CHART_PATH_02: helm/kubeflow-02

jobs:
  build-and-push:
    name: Build and Push Helm Chart
    runs-on: [ ubuntu-latest ] 
    permissions:
      contents: read
      id-token: write  # Needed for Workload Identity Federation

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Define chart version
        if: ${{ inputs.chart == 'test-01' }}
        id: define-chart-version-01
        run: |
          KUBEFLOW_VERSION=$(yq e '.version' $CHART_PATH_01/Chart.yaml)
          echo "KUBEFLOW_VERSION=$KUBEFLOW_VERSION" >> "$GITHUB_OUTPUT"

      - name: Define chart version
        if: ${{ inputs.chart == 'test-02' }}
        id: define-chart-version-02
        run: |
          KUBEFLOW_CORE_VERSION=$(yq e '.version' $CHART_PATH_02/kubeflow-core/Chart.yaml)
          echo "KUBEFLOW_CORE_VERSION=$KUBEFLOW_CORE_VERSION" >> "$GITHUB_OUTPUT"

          KUBEFLOW_VERSION=$(yq e '.version' $CHART_PATH_02/kubeflow/Chart.yaml)
          echo "KUBEFLOW_VERSION=$KUBEFLOW_VERSION" >> "$GITHUB_OUTPUT"

      - uses: google-github-actions/auth@v2
        id: auth
        with:
          token_format: 'access_token'
          project_id: ${{ secrets.PROJECT_ID }}
          service_account: ${{ env.SERVICE_ACCOUNT }}
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          access_token_lifetime: ${{ env.ACCESS_TOKEN_LIFETIME }}

      - name: Verify Authentication to Artifact Registry
        run: |
          gcloud auth configure-docker $REGION-docker.pkg.dev --access-token-file=${{steps.auth.outputs.credentials_file_path}}

      - name: Package and push helm charts to GCP Artifact Registry
        if: ${{ inputs.chart == 'test-01' }}
        id: build-chart-01
        env:
          KUBEFLOW_VERSION: ${{ steps.define-chart-version-01.outputs.KUBEFLOW_VERSION }}
        run: |
          helm package $CHART_PATH_01 --version $KUBEFLOW_VERSION
          helm push kubeflow-$KUBEFLOW_VERSION.tgz oci://$REGION-docker.pkg.dev/${{ secrets.PROJECT_ID }}/helm-charts

      - name: Package and push helm charts to GCP Artifact Registry
        if: ${{ inputs.chart == 'test-02' }}
        id: build-chart-02
        env:
          KUBEFLOW_CORE_VERSION: ${{ steps.define-chart-version-02.outputs.KUBEFLOW_CORE_VERSION }}
          KUBEFLOW_VERSION: ${{ steps.define-chart-version-02.outputs.KUBEFLOW_VERSION }}
        run: |
          helm package $CHART_PATH_02/kubeflow-core --version $KUBEFLOW_CORE_VERSION
          helm package $CHART_PATH_02/kubeflow --version $KUBEFLOW_VERSION

          helm push kubeflow-core-$KUBEFLOW_CORE_VERSION.tgz oci://$REGION-docker.pkg.dev/${{ secrets.PROJECT_ID }}/helm-charts
          helm push kubeflow-$KUBEFLOW_VERSION.tgz oci://$REGION-docker.pkg.dev/${{ secrets.PROJECT_ID }}/helm-charts

